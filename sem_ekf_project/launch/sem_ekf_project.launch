<?xml version="1.0"?>

<launch>
  
     
  <!-- Set params here -->
     <param name="use_sim_time" value="true" />
	
	<!-- ###################################################################################################################### -->
	
	<!-- <node pkg="rosbag" type="play" name="rosbag" output="screen" args="~/Desktop/test_gps_camera_can.bag"/>  -->
	
	<!-- ###################################################################################################################### -->
	
	<group ns= "audibot">
	<!-- Audibot description and urdf -->
	<param name="robot_description" 
	   command="$(find xacro)/xacro --inorder '$(find audibot_description)/urdf/audibot.urdf.xacro' gps:=0 
	   gps_rate:=0 pub_tf:=0 pub_odom:=0 pub_heading:=0 use_sensors:=0 robot_name:=audibot" />
	
	<node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher" />
	
	
	

   </group>
   
   <node pkg="tf" type="static_transform_publisher" name="map_to_audibot" args="0 0 0 0 0 0 kalman_filter_prediction audibot/base_link 30" />
	<!-- ###################################################################################################################### -->	
	
  <!-- Example node that publishes a JointState message for the robot state publisher -->
  <node pkg="sem_ekf_project" type="audibot_joint_pub" name="audibot_joint_pub" />
  
     
  <!-- Node in this package itself -->
  <node pkg="sem_ekf_project" type="sem_ekf_project" name="sem_ekf_project" output="screen" />
  
  <node pkg="rviz" type="rviz" name="sem_ekf_project_rviz" args="-d $(find sem_ekf_project)/rviz/sem_ekf_rviz_config.rviz" />
  
  <!-- Ends here -->  

  <!-- Node in opencv_example package -->
  <node pkg="simple_image_processing" type="rgb_hough_node" name="rgb_hough" output="screen" >
    <remap from="image_in" to="/usb_cam/image_raw" />
  </node>
  <!-- Ends here -->

  <!-- Node in yaw_rate_extractor package -->
  <node pkg="yaw_rate_extractor" type="yaw_rate_extractor" name="yaw_rate_extractor" output="screen" >
  </node>
  <!-- Ends here -->


  <!-- Node in ekf_example package  -->
  <node pkg="ekf_example" type="ekf_example" name="ekf_example" />

  <!--
  <node pkg="dead_reckoning" type="dead_reckoning" name="dead_reckoning" >
    <param name="parent_frame" value="map" />
    <param name="child_frame" value="odom" />
  </node>
  -->
  <!-- Ends here -->
   
  
  <!-- Node in rviz_satellite package  -->
  
  <!-- Send a static GPS fix to every new subscriber. Edit latitude and longitude in launch/demo.gps to use your own position. -->
    <node pkg="rostopic" type="rostopic" name="fake_gps_fix" args="pub /gps/fix sensor_msgs/NavSatFix --latch --file=$(find rviz_satellite)/launch/demo.gps" output="screen"/>

    <!-- Start rviz with a pre-configured AerialMap instance. It will use the fake GPS fix from above.  -->
   <!--
    <node pkg="rviz" type="rviz" name="rviz" args="-d $(find rviz_satellite)/launch/demo.rviz"/>
    -->

  <!-- Ends here -->

</launch>
